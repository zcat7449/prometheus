version: '3.2'
services:
    alertmanager-bot:
        image: metalmatze/alertmanager-bot:0.3.1
        environment:
            - ALERTMANAGER_URL=http://192.168.88.227:9093
            - LISTEN_ADDR=0.0.0.0:8080
            - BOLT_PATH=/data/bot.db
            - STORE=bolt
            - TELEGRAM_ADMIN=<TelegramAdminID>
            - TELEGRAM_TOKEN=<TelegramBotToken>
            - TEMPLATE_PATHS=/templates/default.tmpl
        volumes:
            - /srv/monitoring/alertmanager-bot:/data
        ports:
            - 8080:8080
    prometheus:
        image: prom/prometheus:latest
        volumes:
            - ./prometheus:/etc/prometheus/
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
        links:
            - cadvisor:cadvisor
        depends_on:
            - cadvisor
        restart: always
    node-exporter:
        image: prom/node-exporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --collector.filesystem.ignored-mount-points
            - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
        ports:
            - 9100:9100
        restart: always
        deploy:
            mode: global
    alertmanager:
        image: prom/alertmanager
        ports:
            - 9093:9093
        volumes:
            - ./alertmanager/:/etc/alertmanager/
        restart: always
        command:
            - --config.file=/etc/alertmanager/config.yml
            - --storage.path=/alertmanager
    cadvisor:
        image: google/cadvisor
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        ports:
            - 8081:8080
        restart: always
        deploy:
            mode: global
    grafana:
        image: grafana/grafana
        depends_on:
            - prometheus
        ports:
            - 3000:3000
        volumes:
            - ./grafana:/var/lib/grafana
            - ./grafana/provisioning/:/etc/grafana/provisioning/
        restart: always
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
        environment:
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
              soft: -1
              hard: -1
        ports:
            - "9200:9200"
    kibana:
        image: docker.elastic.co/kibana/kibana:6.3.2
        ports:
            - "5601:5601"